buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = '1.8.21'
group = 'TeamDivineRPG.divinerpg' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'DivineRPG'

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                divinerpg {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                divinerpg {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'divinerpg', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                divinerpg {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = "https://minecraft.curseforge.com/api/maven/"}
    maven { url = "http://dvs1.progwml6.com/files/maven"}
//    maven { url = "https://modmaven.k-4u.nl"}
    maven { url = "https://www.cursemaven.com"}
    maven { url 'https://maven.blamejared.com'}
}
dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.34'
    compileOnly fg.deobf("mezz.jei:jei-1.16.5:${jei_version}:api") //Just Enough Items
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:${jei_version}") //Just Enough Items
    compile fg.deobf("curse.maven:jer-240630:${jer_file_id}") //Just Enough Resources
    compile fg.deobf("curse.maven:pe-226410:${projecte_file_id}") //ProjectE
    compileOnly fg.deobf("curse.maven:patchouli-306770:${patchouli_file_id}") //Patchouli
    runtimeOnly fg.deobf("curse.maven:patchouli-306770:${patchouli_file_id}") //Patchouli

}

jar {
    manifest {
        attributes([
                "Specification-Title": "divinerpg",
                "Specification-Vendor": "TeamDivineRPG",
                "Specification-Version": "1.8",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"TeamDivineRPG",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
