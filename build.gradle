plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.80'
}
version = mod_version
group = mod_group_id
repositories {
    mavenLocal()
}
base {
    archivesName = mod_id
}
java.toolchain.languageVersion = JavaLanguageVersion.of(17)
minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')
//minecraft.accessTransformers.entry public net.minecraft.client.Minecraft textureManager # textureManager

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }
    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }
    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }
    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = "https://maven.minecraftforge.net"}
//    maven { url = "https://minecraft.curseforge.com/api/maven/"}
//    maven { url = "https://dvs1.progwml6.com/files/maven/"}
    maven { url = "https://modmaven.dev"}
    maven { url = "https://www.cursemaven.com"}
//    maven { url 'https://maven.blamejared.com'}
//    maven { url "https://maven.shedaniel.me" }
//    maven { url = uri("https://maven.architectury.dev/") }
//    maven { url = uri("https://maven.blakesmods.com") }
    maven { url 'https://maven.theillusivec4.top/'}
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
//    compileOnly "me.shedaniel.cloth:cloth-config-forge:${cloth_version}"
//    compileOnly "dev.architectury:architectury-forge:${architectury_version}"
//    compileOnly "me.shedaniel:RoughlyEnoughItems-forge:${rei_version}"
    compileOnly "mezz.jei:jei-1.20.2-common-api:${jei_version}" //Just Enough Items
    compileOnly "mezz.jei:jei-1.20.2-forge-api:${jei_version}" //Just Enough Items
    runtimeOnly "mezz.jei:jei-1.20.2-common:${jei_version}" //Just Enough Items
    runtimeOnly "mezz.jei:jei-1.20.2-forge:${jei_version}" //Just Enough Items
    compileOnly "curse.maven:just-enough-resources-jer-240630:${jer_id}" //Just Enough Resources
    runtimeOnly "curse.maven:just-enough-resources-jer-240630:${jer_id}" //Just Enough Resources
    compileOnly "curse.maven:projecte-226410:${projecte_id}" //ProjectE
    runtimeOnly "curse.maven:projecte-226410:${projecte_id}" //ProjectE
//    compileOnly "vazkii.patchouli:Patchouli:${minecraft_version}-${patchouli_version}-FORGE-SNAPSHOT:api" //Patchouli
    runtimeOnly "vazkii.patchouli:Patchouli:1.20.1-${patchouli_version}-FORGE-SNAPSHOT" //Patchouli
//    runtimeOnly "net.darkhax.bookshelf:Bookshelf-Forge-${minecraft_version}:${bookshelf_version}" //Bookshelf
    runtimeOnly "curse.maven:enchantment-descriptions-250419:${enchantment_descriptions_id}" //Enchantment Descriptions
    runtimeOnly "curse.maven:just-enough-effect-descriptions-jeed-532286:${jeed_id}" //Enchantment Descriptions
    runtimeOnly "curse.maven:selene-499980:${selene_id}" //Moonlight Lib (For Target Dummy)
    runtimeOnly "curse.maven:mmmmmmmmmmmm-225738:${mmm_id}" //MmmMmmMmmMmm (Target Dummy)
//    runtimeOnly "curse.maven:jade-324717:${jade_id}" //Jade
    compileOnly "top.theillusivec4.curios:curios-neoforge:${curios_version}+${minecraft_version}:api"
    runtimeOnly "top.theillusivec4.curios:curios-neoforge:${curios_version}+${minecraft_version}"
//    runtimeOnly "curse.maven:model-gap-fix-676136:4428800" // Model Gap Fix

}
tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            neo_version         : neo_version, neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
}
publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}
tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

allprojects {
    repositories {
        jcenter()
    }

    // Allow 400 errors.
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "4096"
        }
    }
}